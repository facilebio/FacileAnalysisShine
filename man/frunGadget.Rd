% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/frunGadget.R
\name{frunGadget}
\alias{frunGadget}
\title{Support harness to initialize and launch a shiny gadget over a facile object.}
\usage{
frunGadget(
  analysisModule,
  analysisUI,
  x,
  user = Sys.getenv("USER"),
  title = "Facile Analysis Gadget",
  height = 800,
  width = 1000,
  viewer = "dialog",
  ...,
  with_sample_filter = is(x, "FacileDataStore"),
  retval = "x",
  debug = FALSE
)
}
\arguments{
\item{analysisModule}{the server function for the gadget}

\item{analysisUI}{the UI function for the gadget}

\item{x}{the FacileDataStore or a facile sample descriptor from one.}

\item{user}{the username/id for the analysis}

\item{title}{the title of the gadget}

\item{height, width}{height and width of gadget, defaults to 600 and 1000,
respectively.}

\item{viewer}{\code{"dialog"} (default), \code{"browser"}, or \code{"pane"}. See description
from \link[shiny:runGadget]{shiny::runGadget}}
}
\value{
a subclass of \code{FacileAnalysisGadgetResult} which holds the result
from the \code{analysisModule}, as well as am \code{annotation} tibble, that can hold
information from brushing of smaples (or features) -- depending on what
the gadget is working over.
}
\description{
This function handles much of the book keeping code required to setup a shiny
gadget around a facile object \code{x}. There are two
}
\details{
This allows us to (shiny)-interact over objects (\code{x}) that have been created
programmaticaly during an analysis, and return relevant interactive events
over \code{x}, or derivative analysis results back to the workspace.
}
\section{Flavors of x}{

We want to support building interactive components over different types of
facile objects (\code{x}). When \code{x} is a:
\itemize{
\item \code{FacileDataStore} the analysis module will include a
\code{FacileShine::filteredReactiveFacileDataStoreUI()}, which allows the user
to interactrively subset down to the samples that the analysis module will
have access to and analyze. The user can then configure and run and
analysis, and subsequently interact with the results.
\item \code{facile_frame} the analysis module will be initialized to work over
the samples defined in the facile_frame. The user will then configure the
anlaysis to run from there and be able to interact with the results.
\item \code{FacileAnalysisResult} will launch the view over the analysis result,
allowing the user to interact with and explore the result.
}
}

